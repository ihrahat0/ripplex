require('dotenv').config(); const admin = require('firebase-admin'); let serviceAccount; try { serviceAccount = require('./src/firebase/new-private-key.json'); } catch (err) { console.error('Error loading Firebase key:', err.message); process.exit(1); } admin.initializeApp({ credential: admin.credential.cert(serviceAccount) }); const db = admin.firestore(); async function queryDeposits() { try { const depositsSnapshot = await db.collection('transactions').where('type', '==', 'deposit').orderBy('timestamp', 'desc').limit(50).get(); if (depositsSnapshot.empty) { console.log('No deposits found'); return; } console.log(`Found ${depositsSnapshot.size} deposits`); console.log('-----------------------------------------'); console.log('USER ID | EMAIL | AMOUNT | TOKEN | CHAIN'); console.log('-----------------------------------------'); const usersSnapshot = await db.collection('users').get(); const userMap = {}; usersSnapshot.forEach(doc => { const userData = doc.data(); userMap[doc.id] = userData.email || 'Unknown'; }); for (const doc of depositsSnapshot.docs) { const deposit = doc.data(); const email = userMap[deposit.userId] || 'Unknown'; console.log(`${deposit.userId} | ${email} | ${deposit.amount} | ${deposit.token} | ${deposit.chain}`); } } catch (error) { console.error('Error querying deposits:', error); } finally { process.exit(0); } } queryDeposits();
